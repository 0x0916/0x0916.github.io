<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cgroup on Notes about linux and my work</title>
    <link>http://linux.laoqinren.net/tags/cgroup/</link>
    <description>Recent content in Cgroup on Notes about linux and my work</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 25 Aug 2018 10:54:09 +0800</lastBuildDate>
    
	<atom:link href="http://linux.laoqinren.net/tags/cgroup/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>cgroup源码分析3——cgroup层级的mount流程</title>
      <link>http://linux.laoqinren.net/kernel/cgroup-source-cgroup_mount/</link>
      <pubDate>Sat, 25 Aug 2018 10:54:09 +0800</pubDate>
      
      <guid>http://linux.laoqinren.net/kernel/cgroup-source-cgroup_mount/</guid>
      <description>&lt;p&gt;本文继续该系列文章，分析了&lt;code&gt;cgroup&lt;/code&gt;各个子系统的&lt;code&gt;mount&lt;/code&gt;流程，当然也包括&lt;code&gt;umount/remount&lt;/code&gt;流程。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;注意：本文基于&lt;code&gt;3.10.0-862.el7.x86_64&lt;/code&gt;版本&lt;code&gt;kernel&lt;/code&gt;进行分析。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cgroup源码分析2——cgroup的初始化</title>
      <link>http://linux.laoqinren.net/kernel/cgroup-source-cgroup_init/</link>
      <pubDate>Thu, 23 Aug 2018 22:50:33 +0800</pubDate>
      
      <guid>http://linux.laoqinren.net/kernel/cgroup-source-cgroup_init/</guid>
      <description>&lt;p&gt;本文详细分析了&lt;code&gt;cgroup&lt;/code&gt;初始化的过程。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;本文基于&lt;code&gt;3.10.0-862.el7.x86_64&lt;/code&gt;版本kernel进行分析。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cgroup源码分析1—— css_set和cgroup的关系</title>
      <link>http://linux.laoqinren.net/kernel/cgroup-source-css_set-and-cgroup/</link>
      <pubDate>Thu, 23 Aug 2018 15:19:35 +0800</pubDate>
      
      <guid>http://linux.laoqinren.net/kernel/cgroup-source-css_set-and-cgroup/</guid>
      <description>&lt;p&gt;本系列文章主要从源码入手，分析&lt;code&gt;linux kernel&lt;/code&gt;中&lt;code&gt;cgroup&lt;/code&gt;的实现。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;本文基于&lt;code&gt;3.10.0-862.el7.x86_64&lt;/code&gt;版本kernel进行分析。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cgroup 中默认文件的内核实现分析</title>
      <link>http://linux.laoqinren.net/kernel/cgroup-default-file/</link>
      <pubDate>Wed, 15 Aug 2018 10:09:56 +0800</pubDate>
      
      <guid>http://linux.laoqinren.net/kernel/cgroup-default-file/</guid>
      <description>&lt;p&gt;cgroup中有一些默认的文件，本文详细分析了这些文件背后的内核实现细节，以便更深入的理解cgroup。&lt;/p&gt;

&lt;p&gt;这些文件包括：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;notify_on_release&lt;/li&gt;
&lt;li&gt;release_agent&lt;/li&gt;
&lt;li&gt;cgroup.procs&lt;/li&gt;
&lt;li&gt;tasks&lt;/li&gt;
&lt;li&gt;cgroup.clone_children&lt;/li&gt;
&lt;li&gt;cgroup.event_control&lt;/li&gt;
&lt;li&gt;cgroup.sane_behavior&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;注意：本文分析中引用的代码来自于centos系统自带的内核：&lt;a href=&#34;http://vault.centos.org/7.5.1804/updates/Source/SPackages/kernel-3.10.0-862.9.1.el7.src.rpm&#34;&gt;kernel-3.10.0-862.9.1.el7&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cgroup之不绑定任何subsystem</title>
      <link>http://linux.laoqinren.net/posts/hierarchy-without-controller-group/</link>
      <pubDate>Tue, 14 Aug 2018 19:59:57 +0800</pubDate>
      
      <guid>http://linux.laoqinren.net/posts/hierarchy-without-controller-group/</guid>
      <description>&lt;p&gt;本文将创建并挂载一颗不和任何&lt;code&gt;subsystem&lt;/code&gt;系统绑定的&lt;code&gt;cgroup&lt;/code&gt;树。用来演示怎么创建、删除子cgroup，以及如何往cgroup中添加和删除进程，并详细介绍了每个&lt;code&gt;cgroup&lt;/code&gt;中默认都有的几个文件的含义。&lt;/p&gt;

&lt;p&gt;最后，介绍了这样使用&lt;code&gt;cgroup&lt;/code&gt;的一个用户。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;本文所有例子在&lt;code&gt;centos 7.5&lt;/code&gt; 下执行通过&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cgroup之debug子系统</title>
      <link>http://linux.laoqinren.net/kernel/cgroup-debug/</link>
      <pubDate>Thu, 09 Aug 2018 22:46:11 +0800</pubDate>
      
      <guid>http://linux.laoqinren.net/kernel/cgroup-debug/</guid>
      <description>&lt;p&gt;&lt;code&gt;cgroup&lt;/code&gt;的&lt;code&gt;debug子系统&lt;/code&gt;其实没有什么用处，要说作用的话，其实它就是一个示例子系统，给内核的开发者展示了内核&lt;code&gt;cgroup&lt;/code&gt;框架的使用方法，同时也展示了&lt;code&gt;cgroup&lt;/code&gt;框架中各个数据结构之间的关系。&lt;/p&gt;

&lt;p&gt;本文就通过研究&lt;code&gt;debug&lt;/code&gt;子系统，来展示&lt;code&gt;cgroup&lt;/code&gt;框架中各个数据结构的关系。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;注意: 内核代码采用&lt;code&gt;linux-3.10.0-862.9.1.el7&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cgroup之cpuacct子系统</title>
      <link>http://linux.laoqinren.net/kernel/cgroup-cpuacct/</link>
      <pubDate>Sun, 20 May 2018 20:57:16 +0800</pubDate>
      
      <guid>http://linux.laoqinren.net/kernel/cgroup-cpuacct/</guid>
      <description>&lt;p&gt;CPU统计（CPU accounting）&lt;code&gt;cpuacct子系统&lt;/code&gt;会自动生成报告来显示cgroup任务所使用的CPU资源，其中包括子群组任务。报告有三种：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cpuacct.usage&lt;/code&gt;：报告此cgroup中所有任务（包括其子孙层级中的所有任务）使用CPU的总时间（纳秒）,该文件时可以写入0值的，用来进行重置统计信息。&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;cpuacct.stat&lt;/code&gt;：报告cgroup的所有任务（包括其子孙层级中的所有任务）使用的用户和系统CPU时间，方式如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;user&lt;/code&gt;——用户模式中任务使用的CPU时间&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system&lt;/code&gt;——系统模式中任务使用的CPU时间&lt;/li&gt;
&lt;li&gt;其单位为&lt;code&gt;USER_HZ&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;cpuacct.usage_percpu&lt;/code&gt;:报告cgroup的所有任务（包括其子孙层级中的所有任务）在每个CPU中使用的CPU时间（纳秒）&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;注意：本文中引用的内核代码版本为&lt;code&gt;v4.4.128&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cgroup之cpuset子系统</title>
      <link>http://linux.laoqinren.net/linux/cgroup-cpuset/</link>
      <pubDate>Thu, 10 May 2018 18:26:35 +0800</pubDate>
      
      <guid>http://linux.laoqinren.net/linux/cgroup-cpuset/</guid>
      <description>&lt;p&gt;最近分析了内核&lt;code&gt;cpuset&lt;/code&gt;的实现，发现在目前的常见的系统中应用不是很广泛。目前最火的docker也只是使用了其最简单的功能。本文对cpuset进行了简要总结，并总结了docker如何使用它。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;注意：本文中引用的内核代码版本为&lt;code&gt;v4.4.128&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>